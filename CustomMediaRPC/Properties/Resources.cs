//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CustomMediaRPC.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CustomMediaRPC.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MediaPresence.
        /// </summary>
        public static string AboutWindow_AppName {
            get {
                return ResourceManager.GetString("AboutWindow_AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An application to display your currently playing media from various sources as a Discord Rich Presence..
        /// </summary>
        public static string AboutWindow_Description {
            get {
                return ResourceManager.GetString("AboutWindow_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Developed by:.
        /// </summary>
        public static string AboutWindow_DevelopedBy {
            get {
                return ResourceManager.GetString("AboutWindow_DevelopedBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Raspiz.
        /// </summary>
        public static string AboutWindow_DeveloperName {
            get {
                return ResourceManager.GetString("AboutWindow_DeveloperName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Donate.
        /// </summary>
        public static string AboutWindow_DonateButton {
            get {
                return ResourceManager.GetString("AboutWindow_DonateButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GitHub Repository.
        /// </summary>
        public static string AboutWindow_GitHubRepo {
            get {
                return ResourceManager.GetString("AboutWindow_GitHubRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Icons by Icons8.
        /// </summary>
        public static string AboutWindow_IconsBy {
            get {
                return ResourceManager.GetString("AboutWindow_IconsBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Report an Issue.
        /// </summary>
        public static string AboutWindow_ReportIssue {
            get {
                return ResourceManager.GetString("AboutWindow_ReportIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About MediaPresence.
        /// </summary>
        public static string AboutWindow_Title {
            get {
                return ResourceManager.GetString("AboutWindow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Version {0}.
        /// </summary>
        public static string AboutWindow_Version {
            get {
                return ResourceManager.GetString("AboutWindow_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error fetching changelog: {0}
        ///Details: {1}.
        /// </summary>
        public static string Changelog_ErrorHttp {
            get {
                return ResourceManager.GetString("Changelog_ErrorHttp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Network error fetching changelog: {0}.
        /// </summary>
        public static string Changelog_ErrorNetwork {
            get {
                return ResourceManager.GetString("Changelog_ErrorNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No releases found on GitHub..
        /// </summary>
        public static string Changelog_ErrorNoReleases {
            get {
                return ResourceManager.GetString("Changelog_ErrorNoReleases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error parsing changelog data: {0}.
        /// </summary>
        public static string Changelog_ErrorParsing {
            get {
                return ResourceManager.GetString("Changelog_ErrorParsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unexpected error occurred: {0}.
        /// </summary>
        public static string Changelog_ErrorUnexpected {
            get {
                return ResourceManager.GetString("Changelog_ErrorUnexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading changelog....
        /// </summary>
        public static string Changelog_StatusLoading {
            get {
                return ResourceManager.GetString("Changelog_StatusLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changelog.
        /// </summary>
        public static string ChangelogWindow_Title {
            get {
                return ResourceManager.GetString("ChangelogWindow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect.
        /// </summary>
        public static string ConnectButton {
            get {
                return ResourceManager.GetString("ConnectButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Debug.
        /// </summary>
        public static string CopyDebugInfoButton_Content {
            get {
                return ResourceManager.GetString("CopyDebugInfoButton_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy Debug Info.
        /// </summary>
        public static string CopyDebugInfoButton_ToolTip {
            get {
                return ResourceManager.GetString("CopyDebugInfoButton_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deezer.
        /// </summary>
        public static string CoverArtSource_Deezer {
            get {
                return ResourceManager.GetString("CoverArtSource_Deezer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spotify (unavailable in Russia).
        /// </summary>
        public static string CoverArtSource_Spotify {
            get {
                return ResourceManager.GetString("CoverArtSource_Spotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Debug information copied to clipboard..
        /// </summary>
        public static string DebugInfoCopied {
            get {
                return ResourceManager.GetString("DebugInfoCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Developers.
        /// </summary>
        public static string DevelopersHyperlink {
            get {
                return ResourceManager.GetString("DevelopersHyperlink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect.
        /// </summary>
        public static string DisconnectButton {
            get {
                return ResourceManager.GetString("DisconnectButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load album art.
        /// </summary>
        public static string EnableCoverArtCheckBox {
            get {
                return ResourceManager.GetString("EnableCoverArtCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide Player.
        /// </summary>
        public static string FloatingPlayer_HideButton_ToolTip {
            get {
                return ResourceManager.GetString("FloatingPlayer_HideButton_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next.
        /// </summary>
        public static string FloatingPlayer_NextButton_ToolTip {
            get {
                return ResourceManager.GetString("FloatingPlayer_NextButton_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pause.
        /// </summary>
        public static string FloatingPlayer_PauseButton_ToolTip {
            get {
                return ResourceManager.GetString("FloatingPlayer_PauseButton_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Play.
        /// </summary>
        public static string FloatingPlayer_PlayButton_ToolTip {
            get {
                return ResourceManager.GetString("FloatingPlayer_PlayButton_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Previous.
        /// </summary>
        public static string FloatingPlayer_PreviousButton_ToolTip {
            get {
                return ResourceManager.GetString("FloatingPlayer_PreviousButton_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Language.
        /// </summary>
        public static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apple Music.
        /// </summary>
        public static string LinkButton_AppleMusic {
            get {
                return ResourceManager.GetString("LinkButton_AppleMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deezer.
        /// </summary>
        public static string LinkButton_Deezer {
            get {
                return ResourceManager.GetString("LinkButton_Deezer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Project Download.
        /// </summary>
        public static string LinkButton_GitHub {
            get {
                return ResourceManager.GetString("LinkButton_GitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spotify.
        /// </summary>
        public static string LinkButton_Spotify {
            get {
                return ResourceManager.GetString("LinkButton_Spotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VK Music.
        /// </summary>
        public static string LinkButton_VkMusic {
            get {
                return ResourceManager.GetString("LinkButton_VkMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yandex Music.
        /// </summary>
        public static string LinkButton_YandexMusic {
            get {
                return ResourceManager.GetString("LinkButton_YandexMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на YouTube Music.
        /// </summary>
        public static string LinkButton_YouTubeMusic {
            get {
                return ResourceManager.GetString("LinkButton_YouTubeMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select link buttons.
        /// </summary>
        public static string LinkButtonsExpander_Header {
            get {
                return ResourceManager.GetString("LinkButtonsExpander_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MediaPresence.
        /// </summary>
        public static string MainWindow_Title {
            get {
                return ResourceManager.GetString("MainWindow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Paused.
        /// </summary>
        public static string PlaybackStatus_Paused {
            get {
                return ResourceManager.GetString("PlaybackStatus_Paused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Playing.
        /// </summary>
        public static string PlaybackStatus_Playing {
            get {
                return ResourceManager.GetString("PlaybackStatus_Playing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stopped.
        /// </summary>
        public static string PlaybackStatus_Stopped {
            get {
                return ResourceManager.GetString("PlaybackStatus_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown.
        /// </summary>
        public static string PlaybackStatus_Unknown {
            get {
                return ResourceManager.GetString("PlaybackStatus_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restart required.
        /// </summary>
        public static string RestartRequired {
            get {
                return ResourceManager.GetString("RestartRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please restart the application for the language change to take full effect..
        /// </summary>
        public static string RestartRequiredMessage {
            get {
                return ResourceManager.GetString("RestartRequiredMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select Media Source:.
        /// </summary>
        public static string SelectMediaSource {
            get {
                return ResourceManager.GetString("SelectMediaSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check for updates on startup.
        /// </summary>
        public static string Settings_AutoCheckUpdates {
            get {
                return ResourceManager.GetString("Settings_AutoCheckUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check for Updates Now.
        /// </summary>
        public static string Settings_CheckUpdatesNow {
            get {
                return ResourceManager.GetString("Settings_CheckUpdatesNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable.
        /// </summary>
        public static string Settings_EnableFloatingPlayer {
            get {
                return ResourceManager.GetString("Settings_EnableFloatingPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Floating Player.
        /// </summary>
        public static string Settings_FloatingPlayerHeader {
            get {
                return ResourceManager.GetString("Settings_FloatingPlayerHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        public static string Settings_General {
            get {
                return ResourceManager.GetString("Settings_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        public static string Settings_GeneralHeader {
            get {
                return ResourceManager.GetString("Settings_GeneralHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Launch on Windows startup.
        /// </summary>
        public static string Settings_LaunchOnStartup {
            get {
                return ResourceManager.GetString("Settings_LaunchOnStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Always On Top.
        /// </summary>
        public static string Settings_PlayerAlwaysOnTop {
            get {
                return ResourceManager.GetString("Settings_PlayerAlwaysOnTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update automatically without asking.
        /// </summary>
        public static string Settings_SilentUpdates {
            get {
                return ResourceManager.GetString("Settings_SilentUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Updates.
        /// </summary>
        public static string Settings_UpdatesHeader {
            get {
                return ResourceManager.GetString("Settings_UpdatesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string SettingsButton_ToolTip {
            get {
                return ResourceManager.GetString("SettingsButton_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string SettingsWindow_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connected to Discord. Rich Presence active...
        /// </summary>
        public static string Status_Connected {
            get {
                return ResourceManager.GetString("Status_Connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connected as {0}.
        /// </summary>
        public static string Status_ConnectedAsUser {
            get {
                return ResourceManager.GetString("Status_ConnectedAsUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connected to Discord. Media paused...
        /// </summary>
        public static string Status_ConnectedPaused {
            get {
                return ResourceManager.GetString("Status_ConnectedPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connecting to Discord.....
        /// </summary>
        public static string Status_Connecting {
            get {
                return ResourceManager.GetString("Status_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnected from Discord...
        /// </summary>
        public static string Status_Disconnected {
            get {
                return ResourceManager.GetString("Status_Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error: {0}.
        /// </summary>
        public static string Status_Error {
            get {
                return ResourceManager.GetString("Status_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Media Controls initialized. Select a source or wait for media....
        /// </summary>
        public static string Status_MediaControlsInitialized {
            get {
                return ResourceManager.GetString("Status_MediaControlsInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No active media session found. Play some music!..
        /// </summary>
        public static string Status_NoMediaSession {
            get {
                return ResourceManager.GetString("Status_NoMediaSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spotify authentication required. Check settings...
        /// </summary>
        public static string Status_SpotifyAuthNeeded {
            get {
                return ResourceManager.GetString("Status_SpotifyAuthNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spotify Error: {0}.
        /// </summary>
        public static string Status_SpotifyError {
            get {
                return ResourceManager.GetString("Status_SpotifyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Initializing....
        /// </summary>
        public static string StatusTextBlock_Initializing {
            get {
                return ResourceManager.GetString("StatusTextBlock_Initializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cycle Theme.
        /// </summary>
        public static string ThemeCycleButton_ToolTip {
            get {
                return ResourceManager.GetString("ThemeCycleButton_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MediaPresence.
        /// </summary>
        public static string TrayIcon_ToolTip {
            get {
                return ResourceManager.GetString("TrayIcon_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exit.
        /// </summary>
        public static string TrayMenu_Exit {
            get {
                return ResourceManager.GetString("TrayMenu_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show.
        /// </summary>
        public static string TrayMenu_Show {
            get {
                return ResourceManager.GetString("TrayMenu_Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use custom default cover URL:.
        /// </summary>
        public static string UseCustomCoverCheckBox {
            get {
                return ResourceManager.GetString("UseCustomCoverCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Changelog.
        /// </summary>
        public static string VersionTextBlock_ToolTip {
            get {
                return ResourceManager.GetString("VersionTextBlock_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Genius.
        /// </summary>
        public static string LinkButton_Genius {
            get {
                return ResourceManager.GetString("LinkButton_Genius", resourceCulture);
            }
        }
    }
}
